# Generated by Django 5.0 on 2023-12-15 19:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PrintModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("number", models.CharField(max_length=10)),
                ("term", models.SmallIntegerField()),
                ("title", models.TextField()),
                ("document_date", models.DateField(db_column="documentDate")),
                ("delivery_date", models.DateField(db_column="deliveryDate")),
                ("change_date", models.DateTimeField(db_column="changeDate")),
            ],
        ),
        migrations.CreateModel(
            name="Club",
            fields=[
                (
                    "id",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=255)),
                ("phone", models.CharField(max_length=255)),
                ("fax", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=255)),
                ("members_count", models.IntegerField()),
                ("photo", models.ImageField(blank=True, null=True, upload_to="photos")),
            ],
        ),
        migrations.CreateModel(
            name="FAQ",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.CharField(blank=True, max_length=255, null=True)),
                ("answer", models.TextField(blank=True, null=True)),
                ("url1", models.URLField(blank=True, null=True)),
                ("url2", models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Voting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "yes",
                    models.SmallIntegerField(
                        blank=True, help_text="Yes votes", null=True
                    ),
                ),
                (
                    "no",
                    models.SmallIntegerField(
                        blank=True, help_text="No votes", null=True
                    ),
                ),
                (
                    "abstain",
                    models.SmallIntegerField(
                        blank=True, help_text="Abstain votes", null=True
                    ),
                ),
                (
                    "sitting",
                    models.IntegerField(
                        blank=True, help_text="Number of the Sejm sitting", null=True
                    ),
                ),
                (
                    "sittingDay",
                    models.IntegerField(
                        blank=True,
                        help_text="Day number of the Sejm sitting",
                        null=True,
                    ),
                ),
                (
                    "votingNumber",
                    models.IntegerField(
                        blank=True, help_text="Voting number", null=True
                    ),
                ),
                (
                    "date",
                    models.DateTimeField(
                        blank=True, help_text="Date of the vote", null=True
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, help_text="Voting topic", max_length=255, null=True
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Voting description",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "topic",
                    models.CharField(
                        blank=True,
                        help_text="Short voting topic",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "pdfLink",
                    models.URLField(
                        blank=True,
                        help_text="Link to the PDF document with voting details",
                        null=True,
                    ),
                ),
                (
                    "kind",
                    models.CharField(
                        blank=True,
                        help_text="Type of voting, one of ELECTRONIC, TRADITIONAL, ON_LIST",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Envoy",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("photo", models.ImageField(blank=True, null=True, upload_to="photos")),
                ("first_name", models.CharField(max_length=255)),
                (
                    "second_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("last_name", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=255)),
                ("active", models.BooleanField(default=True)),
                (
                    "inactive_cause",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("waiver_desc", models.TextField(blank=True, null=True)),
                ("district_num", models.IntegerField()),
                ("district_name", models.CharField(max_length=255)),
                ("voivodeship", models.CharField(max_length=255)),
                ("birth_date", models.DateField()),
                ("birth_location", models.CharField(max_length=255)),
                ("profession", models.CharField(max_length=255)),
                ("education_level", models.CharField(max_length=255)),
                ("number_of_votes", models.IntegerField()),
                (
                    "club",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="envoys",
                        to="sejm_app.club",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Scandal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("date", models.DateField(blank=True, null=True)),
                (
                    "entry_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("APPROVED", "Approved"),
                            ("REJECTED", "Rejected"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("url1", models.URLField(blank=True, null=True)),
                ("url2", models.URLField(blank=True, null=True)),
                (
                    "author",
                    models.ForeignKey(
                        help_text="Author of the description",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scandals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "clubs",
                    models.ManyToManyField(
                        blank=True, related_name="scandals", to="sejm_app.club"
                    ),
                ),
                (
                    "envoys",
                    models.ManyToManyField(
                        blank=True, related_name="scandals", to="sejm_app.envoy"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Vote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vote",
                    models.SmallIntegerField(
                        choices=[(1, "Yes"), (0, "No"), (2, "ABSTAIN"), (3, "ABSENT")],
                        help_text="Vote option",
                    ),
                ),
                (
                    "MP",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="votes",
                        to="sejm_app.envoy",
                    ),
                ),
                (
                    "voting",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="votes",
                        to="sejm_app.voting",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AdditionalPrint",
            fields=[
                (
                    "printmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="sejm_app.printmodel",
                    ),
                ),
                (
                    "main_print",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="additional_prints",
                        to="sejm_app.printmodel",
                    ),
                ),
            ],
            bases=("sejm_app.printmodel",),
        ),
    ]
