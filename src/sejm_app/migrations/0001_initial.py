# Generated by Django 5.0 on 2024-03-25 12:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PrintModel",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False, max_length=13, primary_key=True, serialize=False
                    ),
                ),
                ("number", models.CharField(max_length=10)),
                ("term", models.SmallIntegerField()),
                ("title", models.TextField()),
                ("documentDate", models.DateField()),
                ("deliveryDate", models.DateField()),
                ("changeDate", models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name="Club",
            fields=[
                (
                    "id",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=255)),
                ("phone", models.CharField(max_length=255)),
                ("fax", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=255)),
                ("membersCount", models.IntegerField()),
                (
                    "photo",
                    models.ImageField(blank=True, null=True, upload_to="club_logos"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Committee",
            fields=[
                ("name", models.CharField(max_length=512)),
                ("nameGenitive", models.CharField(max_length=512)),
                (
                    "id",
                    models.CharField(
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        verbose_name="code",
                    ),
                ),
                ("appointmentDate", models.DateField()),
                ("compositionDate", models.DateField()),
                ("phone", models.CharField(blank=True, max_length=100)),
                ("scope", models.TextField(null=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("EXTRAORDINARY", "Nadzwyczajna"),
                            ("INVESTIGATIVE", "Śledcza"),
                            ("STANDING", "Stała"),
                        ],
                        default="STANDING",
                        max_length=50,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FAQ",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.CharField(blank=True, max_length=255, null=True)),
                ("answer", models.TextField(blank=True, null=True)),
                ("url1", models.URLField(blank=True, null=True)),
                ("url2", models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Voting",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        help_text="Voting ID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "yes",
                    models.SmallIntegerField(
                        blank=True, help_text="Yes votes", null=True
                    ),
                ),
                (
                    "no",
                    models.SmallIntegerField(
                        blank=True, help_text="No votes", null=True
                    ),
                ),
                (
                    "abstain",
                    models.SmallIntegerField(
                        blank=True, help_text="Abstain votes", null=True
                    ),
                ),
                (
                    "term",
                    models.IntegerField(
                        blank=True, help_text="Sejm term number", null=True
                    ),
                ),
                (
                    "sitting",
                    models.IntegerField(
                        blank=True, help_text="Number of the Sejm sitting", null=True
                    ),
                ),
                (
                    "sittingDay",
                    models.IntegerField(
                        blank=True,
                        help_text="Day number of the Sejm sitting",
                        null=True,
                    ),
                ),
                (
                    "votingNumber",
                    models.IntegerField(
                        blank=True, help_text="Voting number", null=True
                    ),
                ),
                (
                    "date",
                    models.DateTimeField(
                        blank=True, help_text="Date of the vote", null=True
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, help_text="Voting topic", max_length=255, null=True
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Voting description",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "topic",
                    models.CharField(
                        blank=True,
                        help_text="Short voting topic",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "pdfLink",
                    models.URLField(
                        blank=True,
                        help_text="Link to the PDF document with voting details",
                        null=True,
                    ),
                ),
                (
                    "kind",
                    models.CharField(
                        blank=True,
                        help_text="Type of voting, one of ELECTRONIC, TRADITIONAL, ON_LIST",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "success",
                    models.BooleanField(
                        blank=True,
                        help_text="Whether the voting was successful",
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Envoy",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("photo", models.ImageField(blank=True, null=True, upload_to="photos")),
                ("firstName", models.CharField(max_length=255)),
                ("secondName", models.CharField(blank=True, max_length=255, null=True)),
                ("lastName", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=255)),
                ("active", models.BooleanField(default=True)),
                (
                    "inactiveCause",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("waiverDesc", models.TextField(blank=True, null=True)),
                ("districtNum", models.IntegerField()),
                ("districtName", models.CharField(max_length=255)),
                ("voivodeship", models.CharField(max_length=255)),
                ("birthDate", models.DateField()),
                ("birthLocation", models.CharField(max_length=255)),
                ("profession", models.CharField(max_length=255)),
                ("educationLevel", models.CharField(max_length=255)),
                ("numberOfVotes", models.IntegerField()),
                (
                    "biography",
                    models.TextField(
                        blank=True,
                        help_text="Biography of the envoy pulled from wikipedia",
                        null=True,
                    ),
                ),
                (
                    "biography_source",
                    models.URLField(
                        blank=True,
                        help_text="URL to the wikipedia page of the envoy",
                        null=True,
                    ),
                ),
                (
                    "club",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="envoys",
                        to="sejm_app.club",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Interpellation",
            fields=[
                (
                    "term",
                    models.IntegerField(help_text="Parliamentary term", null=True),
                ),
                (
                    "num",
                    models.IntegerField(help_text="Interpellation number", null=True),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title of the interpellation",
                        max_length=512,
                        null=True,
                    ),
                ),
                (
                    "receiptDate",
                    models.DateField(help_text="Date of receipt", null=True),
                ),
                (
                    "lastModified",
                    models.DateField(help_text="Last modified date", null=True),
                ),
                (
                    "bodyLink",
                    models.URLField(
                        help_text="Link to the interpellation body", null=True
                    ),
                ),
                (
                    "to",
                    models.JSONField(
                        default=list,
                        help_text="Recipients of the interpellation",
                        null=True,
                    ),
                ),
                ("sentDate", models.DateField(help_text="Date sent", null=True)),
                (
                    "repeatedInterpellation",
                    models.JSONField(
                        default=list,
                        help_text="Repeated interpellation references",
                        null=True,
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "fromMember",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interpellations",
                        to="sejm_app.envoy",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Process",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=10, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "UE",
                    models.BooleanField(
                        blank=True, choices=[(True, "YES"), (False, "NO")], null=True
                    ),
                ),
                ("comments", models.TextField()),
                ("number", models.IntegerField()),
                ("term", models.IntegerField()),
                ("webGeneratedDate", models.DateTimeField(blank=True, null=True)),
                ("changeDate", models.DateField(null=True)),
                ("description", models.TextField()),
                ("documentDate", models.DateField()),
                ("documentType", models.CharField(max_length=255)),
                ("legislativeCommittee", models.BooleanField()),
                ("principleOfSubsidiarity", models.BooleanField()),
                ("processStartDate", models.DateField()),
                ("urgencyWithdrawDate", models.DateField(blank=True, null=True)),
                ("rclNum", models.CharField(max_length=20)),
                ("title", models.TextField()),
                ("urgencyStatus", models.CharField(max_length=20)),
                (
                    "createdBy",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("posłowie", "Envoys"),
                            ("klub", "Club"),
                            ("prezydium", "Presidium"),
                            ("obywatele", "Citizens"),
                            ("rząd", "Government"),
                        ],
                        default=None,
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "MPs",
                    models.ManyToManyField(
                        blank=True, related_name="processes", to="sejm_app.envoy"
                    ),
                ),
                (
                    "club",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="processes",
                        to="sejm_app.club",
                    ),
                ),
                (
                    "printModel",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sejm_app.printmodel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Reply",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(max_length=255)),
                ("receiptDate", models.DateField()),
                ("lastModified", models.DateField()),
                (
                    "fromNotEnvoy",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("bodyLink", models.URLField(null=True)),
                ("onlyAttachment", models.BooleanField(default=False)),
                ("attachments", models.JSONField(default=list)),
                (
                    "fromMember",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="sejm_app.envoy",
                    ),
                ),
                (
                    "interpolation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="sejm_app.interpellation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Scandal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("date", models.DateField(blank=True, null=True)),
                (
                    "entry_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("APPROVED", "Approved"),
                            ("REJECTED", "Rejected"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("url1", models.URLField(blank=True, null=True)),
                ("url2", models.URLField(blank=True, null=True)),
                (
                    "author",
                    models.ForeignKey(
                        help_text="Author of the description",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scandals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "clubs",
                    models.ManyToManyField(
                        blank=True, related_name="scandals", to="sejm_app.club"
                    ),
                ),
                (
                    "envoys",
                    models.ManyToManyField(
                        blank=True, related_name="scandals", to="sejm_app.envoy"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Vote",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                (
                    "vote",
                    models.SmallIntegerField(
                        choices=[
                            (0, "No"),
                            (1, "Yes"),
                            (2, "ABSTAIN"),
                            (3, "ABSENT"),
                            (4, "VOTE_VALID"),
                        ],
                        help_text="Vote option",
                    ),
                ),
                (
                    "MP",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="votes",
                        to="sejm_app.envoy",
                    ),
                ),
                (
                    "voting",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="votes",
                        to="sejm_app.voting",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Stage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("stageNumber", models.IntegerField(blank=True, null=True)),
                ("date", models.DateField(blank=True, null=True)),
                ("stageName", models.CharField(max_length=255)),
                ("sittingNum", models.IntegerField(blank=True, null=True)),
                ("comment", models.TextField(blank=True, null=True)),
                ("decision", models.CharField(blank=True, max_length=255, null=True)),
                ("textAfter3", models.URLField(blank=True, null=True)),
                (
                    "process",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stages",
                        to="sejm_app.process",
                    ),
                ),
                (
                    "voting",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sejm_app.voting",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClubVote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("yes", models.IntegerField(default=0)),
                ("no", models.IntegerField(default=0)),
                ("abstain", models.IntegerField(default=0)),
                (
                    "club",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="votes",
                        to="sejm_app.club",
                    ),
                ),
                (
                    "voting",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="club_votes",
                        to="sejm_app.voting",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AdditionalPrint",
            fields=[
                (
                    "printmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="sejm_app.printmodel",
                    ),
                ),
                (
                    "main_print",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="additional_prints",
                        to="sejm_app.printmodel",
                    ),
                ),
            ],
            bases=("sejm_app.printmodel",),
        ),
        migrations.CreateModel(
            name="CommitteeMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("function", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "committee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members",
                        to="sejm_app.committee",
                    ),
                ),
                (
                    "envoy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="sejm_app.envoy"
                    ),
                ),
            ],
            options={
                "unique_together": {("committee", "envoy")},
            },
        ),
    ]
